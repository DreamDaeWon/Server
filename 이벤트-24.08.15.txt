-- 쓰레드 멈추기 --

함수 내부에

this_thread::sleep_for(100ms);

이런식으로 넣어주면 해당 부분을 돌고있는 쓰레드를 멈출 수 있다.



-- 이벤트 --

이벤트 기능을 사용하기 위해서는 #include<windows.h>를 포함해야 한다.

HANDLE hEvent;

먼저 하나의 핸들을 만들어야 한다.
이 핸들은 정수값에 불과하지만 어떤 하나의 특정 커널 오브젝트를 지칭한다.



-- 커널오브젝트 --

커널 오브젝트는 우리가 보통 만드는 유저레벨 즉 유저가 관리하는 오브젝트가 아닌
커널, 즉 오브젝트가 관리해주는 오브젝트를 말한다.

모든 커널 오브젝트는 해당 오브젝트가 사용되어지고있는 개수 - Usage Count

시그널 상태 - Signal(파란불)
논 시그널 상태 - Non-Signal(빨간불)

HANDLE hEvent = CreateEvenet함수로 이벤트를 만들어줄 수 있다.

그 후에 SetEvent(hEvenet); 함수로
신호를 켜줄 수 있다.

신호를 받는 부분은
WaitForSingleObject(hEvent, INFINITE/* 무한정 대기 */); 이런식으로 해당 이벤트가
활성화되어지기 전까지는 기다리도록 만들 수 있다.

일반적인 락과 다른 부분은 
락은 계속해서 본인이 락을 하기위해 시도하면서 어떤 행동들을 반복하지만,
이벤트는 해당 이벤트가 켜지기 전까지 아무것도 하지 않는다는 것이 다르다.


대신 비용이 커진다.


-- condition_variable --

condition_variable은 커널 오브젝트가 아닌 유저레벨 오브젝트이다.

condition_variable 다른 스레드가 공유 변수를 수정하고 condition_variable이 알려줄 때까지
쓰레드들을 대기하도록 할 수 있다.


condition_variable cv; 이렇게 선언할 수 있다.

다른 쓰레드들을 묶어서 관리할 수 있으며
다른 쓰레드들은 cv.wait(Lock, 조건); 이렇게 넣어주면

해당 조건에 부합하지 않을 시 Lock을 해제하고 대시 상태로 전환한다.
부합한다면 바로 빠져나와 이어서 코드를 진행한다.

즉 순서를 보면
1. Lock를 잡으려고 시도한다.(이미 잡았으면 이 과정을 넘어간다)
2. 조건을 확인한다.
 - 만족하면 이어서 코드를 진행한다.
 - 만족하지 못했을 시 Lock 를 풀어주고 대기 상태로 전환한다.

