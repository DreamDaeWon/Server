-- 쓰레드 생성 --
#include <thread> 를 포함하여

쓰레드를 변수처럼 만들어 줄 수 있게 되었다.

std::thread t(함수이름);

쓰레드가 처음에 실행이 될 때 엔트리 포인트(진입점) 이 될 수 있는 함수를 하나 넣어준다. 만약 함수가 void Good(int i) 처럼 매개면수가 있으면

std::thread t(함수이름,매개변수); 이런식으로 넣어줄 수 있다.


-- 첫 오류 --
메인쓰레드가 끝났는데 다른 자식 쓰레드가 안 끝나 있으면 에러가 발생한다.

그래서 메인쓰레드는 무한루프를 돌거나

thread t; 이런식으로 t라는 이름으로 생성하였으면

t.join(); 이라고 하는 쓰레드 내부의 기능을 사용하여 t라는 쓰레드의 일이 다 끝날때까지 기다려주는 코드를 추가하여 오류를 없애줄 수 있다.


-- 주의사항 --
메모리의 4개영역 code data heap stack 중에서

data heap 영역을 조심해야 한다.

stack 같은 경우에는 쓰레드마다 자신의 고유한 스택 영역을 사용하고 있기 때문에 상관이 없고, code영역은 공유는 하지만 우리가 수정해서 사용하지는 않기 때문에 상관이 없다.

그러나 data 와 heap 영역은 공유해서 우리가 사용할 수 있기 때문에 문제가 발생할 수 있어 주의가 필요하다.